on:
  push:
    tags:
    - '[0-9]+.[0-9]+.[0-9]+**'

name: Release

jobs:

  create_release:
    name: Create Github Release
    runs-on: ubuntu-latest

    steps:
    - name: Read Version
      run: echo ::set-env name=LEVEL99_VERSION::${GITHUB_REF:10}
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.LEVEL99_VERSION }}
        release_name: Level-99 ${{ env.LEVEL99_VERSION }}
        draft: true
        prerelease: false
    - name: Write Upload URL To Disk
      run: echo "${{ steps.create_release.outputs.upload_url }}" > upload-url
    - name: Store Upload URL
      uses: actions/upload-artifact@v1
      with:
        name: release
        path: upload-url

  windows:
    name: Windows
    runs-on: windows-latest
    needs: create_release

    steps:
    - name: Checkout Level-99
      uses: actions/checkout@v1
    - name: Install Rust Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        default: true
    - name: Read Level-99 Version
      shell: bash
      run: echo ::set-env name=LEVEL99_VERSION::${GITHUB_REF:10}
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
    - name: Retrieve Upload URL
      uses: actions/download-artifact@v1
      with:
        name: release
    - name: Read Upload URL
      shell: bash
      run: echo ::set-env name=UPLOAD_URL::$(cat release/upload-url)
    - name: Upload Executable To Github Release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: ./target/release/level-99.exe
        asset_name: level-99_${{ env.LEVEL99_VERSION }}.exe
        asset_content_type: application/octet-stream

